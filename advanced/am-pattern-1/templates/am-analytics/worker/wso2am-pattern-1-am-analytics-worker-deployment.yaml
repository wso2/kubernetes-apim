# Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: wso2am-pattern-1-am-analytics-worker-deployment
  namespace : {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.wso2.deployment.wso2amAnalyticsWorker.replicas }}
  minReadySeconds: {{ .Values.wso2.deployment.wso2amAnalyticsWorker.minReadySeconds }}
  strategy:
    rollingUpdate:
      maxSurge: {{ .Values.wso2.deployment.wso2amAnalyticsWorker.strategy.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .Values.wso2.deployment.wso2amAnalyticsWorker.strategy.rollingUpdate.maxUnavailable }}
    type: RollingUpdate
  selector:
    matchLabels:
      deployment: wso2am-pattern-1-analytics-worker
  template:
    metadata:
      labels:
        deployment: wso2am-pattern-1-analytics-worker
    spec:
      initContainers:
        - name: init-apim-analytics-db
          image: busybox:1.31
          command: ['sh', '-c', 'echo -e "Checking for the availability of MySQL Server deployment"; while ! nc -z {{ .Values.wso2.mysql.host }} {{ .Values.wso2.mysql.port }}; do sleep 1; printf "-"; done; echo -e "  >> MySQL Server has started";']
      containers:
        - name: wso2am-pattern-1-analytics-worker
          {{- if .Values.wso2.deployment.wso2amAnalyticsWorker.dockerRegistry }}
          image: {{ .Values.wso2.deployment.wso2amAnalyticsWorker.dockerRegistry }}/{{ .Values.wso2.deployment.wso2amAnalyticsWorker.imageName }}
          {{- $tag := .Values.wso2.deployment.wso2amAnalyticsWorker.imageTag }}
          {{- if not (eq $tag "") }}{{- printf ":%s" $tag -}}{{- end }}
          {{- else if or (eq .Values.wso2.subscription.username "") (eq .Values.wso2.subscription.password "") }}
          image: wso2/{{ .Values.wso2.deployment.wso2amAnalyticsWorker.imageName }}:{{ .Values.wso2.deployment.wso2amAnalyticsWorker.imageTag }}
          {{- else }}
          image: docker.wso2.com/{{ .Values.wso2.deployment.wso2amAnalyticsWorker.imageName }}:{{ .Values.wso2.deployment.wso2amAnalyticsWorker.imageTag }}
          {{- end }}
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - nc -z localhost 9444
            initialDelaySeconds: {{ .Values.wso2.deployment.wso2amAnalyticsWorker.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.wso2.deployment.wso2amAnalyticsWorker.livenessProbe.periodSeconds }}
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - nc -z localhost 9444
            initialDelaySeconds: {{ .Values.wso2.deployment.wso2amAnalyticsWorker.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.wso2.deployment.wso2amAnalyticsWorker.readinessProbe.periodSeconds }}
          lifecycle:
            preStop:
              exec:
                command:  ['sh', '-c', '${WSO2_SERVER_HOME}/bin/worker.sh stop']
          resources:
            requests:
              memory: {{ .Values.wso2.deployment.wso2amAnalyticsWorker.resources.requests.memory }}
              cpu: {{ .Values.wso2.deployment.wso2amAnalyticsWorker.resources.requests.cpu }}
            limits:
              memory: {{ .Values.wso2.deployment.wso2amAnalyticsWorker.resources.limits.memory }}
              cpu: {{ .Values.wso2.deployment.wso2amAnalyticsWorker.resources.limits.cpu }}
          imagePullPolicy: {{ .Values.wso2.deployment.wso2amAnalyticsWorker.imagePullPolicy }}
          securityContext:
            runAsUser: 802
          ports:
            -
              containerPort: 9764
              protocol: "TCP"
            -
              containerPort: 9444
              protocol: "TCP"
            -
              containerPort: 7612
              protocol: "TCP"
            -
              containerPort: 7712
              protocol: "TCP"
            -
              containerPort: 9091
              protocol: "TCP"
            -
              containerPort: 7071
              protocol: "TCP"
            -
              containerPort: 7444
              protocol: "TCP"
          volumeMounts:
            - name: wso2am-pattern-1-am-analytics-worker-conf
              mountPath: /home/wso2carbon/wso2-config-volume/conf/worker/deployment.yaml
              subPath: deployment.yaml
      serviceAccountName: {{ .Values.kubernetes.svcaccount }}
      {{- if and (not (eq .Values.wso2.subscription.username "")) (not (eq .Values.wso2.subscription.password "")) }}
      imagePullSecrets:
        - name: wso2am-pattern-1-creds
      {{- end }}
      {{- if .Values.wso2.deployment.wso2am.imagePullSecrets }}
      imagePullSecrets:
        - name: {{ .Values.wso2.deployment.wso2am.imagePullSecrets }}
      {{- else if and (not (eq .Values.wso2.subscription.username "")) (not (eq .Values.wso2.subscription.password "")) }}
      imagePullSecrets:
        - name: wso2am-pattern-1-creds
      {{- end }}
      volumes:
        - name: wso2am-pattern-1-am-analytics-worker-conf
          configMap:
            name: wso2am-pattern-1-am-analytics-worker-conf
