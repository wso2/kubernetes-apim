# Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: Service
metadata:
  name: wso2am-pattern-1-am-1-service
  namespace : {{ .Release.Namespace }}
spec:
  # label keys and values that must match in order to receive traffic for this service
  selector:
    deployment: wso2am-pattern-1-am
    node: wso2am-pattern-1-am-1
  ports:
    # ports that this service should serve on
    - name: binary
      protocol: TCP
      port: 9611
    - name: binary-secure
      protocol: TCP
      port: 9711
    - name: jms-tcp
      protocol: TCP
      port: 5672
    - name: servlet-https
      protocol: TCP
      port: 9443
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: wso2am-pattern-1-am-1-deployment
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      deployment: wso2am-pattern-1-am
      node: wso2am-pattern-1-am-1
  serviceName: wso2am-pattern-1-am-1-service
  replicas: {{ .Values.wso2.deployment.am.replicas }}
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        deployment: wso2am-pattern-1-am
        node: wso2am-pattern-1-am-1
    spec:
      hostAliases:
        - ip: "127.0.0.1"
          hostnames:
            - "{{ .Release.Name }}-am"
            - "{{ .Release.Name }}-gateway"
      initContainers:
      {{ if .Values.wso2.deployment.dependencies.mysql }}
      - name: init-apim-analytics-db
        image: busybox:1.31
        command: ['sh', '-c', 'echo -e "Checking for the availability of MySQL Server deployment"; while ! nc -z "wso2am-mysql-db-service" 3306; do sleep 1; printf "-"; done; echo -e "  >> MySQL Server has started";']
      {{ end }}
      - name: init-am-analytics-worker
        image: busybox:1.31
        command: ['sh', '-c', 'echo -e "Checking for the availability of WSO2 API Manager Analytics Worker deployment"; while ! nc -z wso2am-pattern-1-analytics-worker-service 7712; do sleep 1; printf "-"; done; echo -e "  >> WSO2 API Manager Analytics Worker has started";']
      containers:
      - name: wso2am-pattern-1-am
        {{- if .Values.wso2.deployment.am.dockerRegistry }}
        image: {{ .Values.wso2.deployment.am.dockerRegistry }}/{{ .Values.wso2.deployment.am.imageName }}
        {{- $tag := .Values.wso2.deployment.am.imageTag }}
        {{- if not (eq $tag "") }}{{- printf ":%s" $tag -}}{{- end }}
        {{- else if or (eq .Values.wso2.subscription.username "") (eq .Values.wso2.subscription.password "") }}
        image: wso2/{{ .Values.wso2.deployment.am.imageName }}:{{ .Values.wso2.deployment.am.imageTag }}
        {{- else }}
        image: docker.wso2.com/{{ .Values.wso2.deployment.am.imageName }}:{{ .Values.wso2.deployment.am.imageTag }}
        {{- end }}
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - nc -z localhost 9443
          initialDelaySeconds: {{ .Values.wso2.deployment.am.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.wso2.deployment.am.livenessProbe.periodSeconds }}
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - nc -z localhost 9443
          initialDelaySeconds: {{ .Values.wso2.deployment.am.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.wso2.deployment.am.readinessProbe.periodSeconds }}
        lifecycle:
          preStop:
            exec:
              command:  ['sh', '-c', '${WSO2_SERVER_HOME}/bin/wso2server.sh stop']
        resources:
          requests:
            memory: {{ .Values.wso2.deployment.am.resources.requests.memory }}
            cpu: {{ .Values.wso2.deployment.am.resources.requests.cpu }}
          limits:
            memory: {{ .Values.wso2.deployment.am.resources.limits.memory }}
            cpu: {{ .Values.wso2.deployment.am.resources.limits.cpu }}
        imagePullPolicy: {{ .Values.wso2.deployment.am.imagePullPolicy }}
        ports:
        - containerPort: 8280
          protocol: "TCP"
        - containerPort: 8243
          protocol: "TCP"
        - containerPort: 9763
          protocol: "TCP"
        - containerPort: 9443
          protocol: "TCP"
        - containerPort: 9711
          protocol: "TCP"
        - containerPort: 9611
          protocol: "TCP"
        - containerPort: 5672
          protocol: "TCP"
        env:
        - name: HOST_NAME
          value: "{{ .Release.Name }}-am"
        - name: NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        volumeMounts:
        - name: wso2am-pattern-1-am-volume-claim-synapse-configs
          mountPath: /home/wso2carbon/wso2am-3.1.0/repository/deployment/server/synapse-configs
        - name: wso2am-pattern-1-am-volume-claim-executionplans
          mountPath: /home/wso2carbon/wso2am-3.1.0/repository/deployment/server/executionplans
        - name: wso2am-pattern-1-am-1-conf
          mountPath: /home/wso2carbon/wso2-config-volume/repository/conf/deployment.toml
          subPath: deployment.toml
        - name: wso2am-pattern-1-am-conf-entrypoint
          mountPath: /home/wso2carbon/docker-entrypoint.sh
          subPath: docker-entrypoint.sh
        - name: wso2am-pattern-1-instance-1-solr
          mountPath: /home/wso2carbon/solr/indexed-data
        - name: wso2am-pattern-1-instance-1-carbon-db
          mountPath: /home/wso2carbon/solr/database
      serviceAccountName: {{ .Values.kubernetes.svcaccount }}
      {{- if .Values.wso2.deployment.am.imagePullSecrets }}
      imagePullSecrets:
      - name: {{ .Values.wso2.deployment.am.imagePullSecrets }}
      {{- else if and (not (eq .Values.wso2.subscription.username "")) (not (eq .Values.wso2.subscription.password "")) }}
      imagePullSecrets:
      - name: wso2am-pattern-1-creds
      {{- end }}
      volumes:
      - name: wso2am-pattern-1-instance-1-carbon-db
        persistentVolumeClaim:
          claimName: wso2am-pattern-1-instance-1-carbon-db
      - name: wso2am-pattern-1-instance-1-solr
        persistentVolumeClaim:
          claimName: wso2am-pattern-1-instance-1-solr
      - name: wso2am-pattern-1-am-volume-claim-synapse-configs
        persistentVolumeClaim:
          claimName: wso2am-pattern-1-am-volume-claim-synapse-configs
      - name: wso2am-pattern-1-am-volume-claim-executionplans
        persistentVolumeClaim:
          claimName: wso2am-pattern-1-am-volume-claim-executionplans
      - name: wso2am-pattern-1-am-1-conf
        configMap:
          name: wso2am-pattern-1-am-1-conf
      - name: wso2am-pattern-1-am-conf-entrypoint
        configMap:
          name: wso2am-pattern-1-am-conf-entrypoint
          defaultMode: 0407
