# Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

wso2:

  # WSO2 subscription parameters. If you do not have an active subscription, do not provide values for the parameters.
  # If you do not possess an active WSO2 subscription already, you can sign up for a WSO2 Free Trial Subscription at (https://wso2.com/free-trial-subscription).
  subscription:
    username: ""
    password: ""

  deployment:
    dependencies:
      # The configuration should be set to be 'true' if a MySQL database should be spawned as a pod within the cluster
      mysql: true
      # Enable NFS dynamic provisioner for Kubernetes
      nfsServerProvisioner: true

    persistentRuntimeArtifacts:
      # Persistent storage provider expected to be used for sharing persistent runtime artifacts
      # Must refer to an appropriate Kubernetes Storage Class (https://kubernetes.io/docs/concepts/storage/storage-classes/)
      # "nfs" (default) - Using the official Kubernetes NFS Server Provisioner (https://github.com/helm/charts/tree/master/stable/nfs-server-provisioner).
      # This provisioner is installed by default, with this Helm Chart (wso2 -> deployment -> dependencies -> nfsServerProvisioner).
      storageClass: "nfs"

    am:
      # API Manager profile configurations
      gateway:
        # Hostname for Gateway profile
        hostname: "gateway.am.wso2.com"

      # Hostname for API Manager All In One deployment
      hostname: "am.wso2.com"

      # Container image configurations
      # If a custom image must be used, uncomment 'dockerRegistry' and provide its value.
      # dockerRegistry: ""
      imageName: "wso2am"
      imageTag: "3.1.0"
      replicas: 1

      strategy:
        rollingUpdate:
          maxSurge: 1
          maxUnavailable: 0
      # Indicates whether the container is running.
      livenessProbe:
        # Number of seconds after the container has started before liveness probes are initiated.
        initialDelaySeconds: 240
        # How often (in seconds) to perform the probe.
        periodSeconds: 10
      # Indicates whether the container is ready to service requests.
      readinessProbe:
        # Number of seconds after the container has started before readiness probes are initiated.
        initialDelaySeconds: 240
        # How often (in seconds) to perform the probe.
        periodSeconds: 10
      resources:
        # These are the minimum resource recommendations for running WSO2 API Management product profiles
        # as per official documentation (https://apim.docs.wso2.com/en/next/SetupAndInstall/InstallationGuide/installation-prerequisites/).
        requests:
          memory: "2Gi"
          cpu: "2000m"
        limits:
          memory: "3Gi"
          cpu: "3000m"
      # Refer to the Kubernetes documentation on updating images (https://kubernetes.io/docs/concepts/containers/images/#updating-images)
      imagePullPolicy: Always

      instanceOne:
        # If the deployment configurations for the WSO2 API Manager v3.0.0 (<WSO2AM>/repository/conf/deployment.toml),
        # add the customized configuration file under (wso2 -> deployment -> am -> instanceOne -> config -> deployment.toml)
        config: ""
#            deployment.toml: |-
#              # deployment configurations for the WSO2 API Manager v3.0.0 (<WSO2AM>/repository/conf/deployment.toml)
      instanceTwo:
        # If the deployment configurations for the WSO2 API Manager v3.0.0 (<WSO2AM>/repository/conf/deployment.toml),
        # add the customized configuration file under (wso2 -> deployment -> am -> instanceTwo -> config -> deployment.toml)
        config: ""
#            deployment.toml: |-
#              # deployment configurations for the WSO2 API Manager v3.0.0 (<WSO2AM>/repository/conf/deployment.toml)

    analytics:
      dashboard:
        # If a custom image must be used, uncomment 'dockerRegistry' and provide its value.
        #dockerRegistry: ""

        imageName: "wso2am-analytics-dashboard"
        imageTag: "3.1.0"
        replicas: 1
        # Minimum number of seconds for which a newly created pod should be ready without any of its containers crashing, for it to be considered available.
        minReadySeconds: 30
        strategy:
          rollingUpdate:
            maxSurge: 1
            maxUnavailable: 0
        # Indicates whether the container is running.
        livenessProbe:
          # Number of seconds after the container has started before liveness probes are initiated.
          initialDelaySeconds: 20
          # How often (in seconds) to perform the probe.
          periodSeconds: 10
        # Indicates whether the container is ready to service requests.
        readinessProbe:
          # Number of seconds after the container has started before readiness probes are initiated.
          initialDelaySeconds: 20
          # How often (in seconds) to perform the probe.
          periodSeconds: 10
        resources:
          # These are the minimum resource recommendations for running WSO2 Stream Processor based server profiles
          # as per official documentation (https://docs.wso2.com/display/SP440/Installation+Prerequisites).
          requests:
            memory: "4Gi"
            cpu: "2000m"
          # Please see the official documentation on WSO2 Stream Processor based Performance Analysis and Resource recommendations
          # (https://docs.wso2.com/display/SP440/Performance+Analysis+Results) and tune the limits according to your needs
          # where necessary.
          limits:
            memory: "4Gi"
            cpu: "2000m"
        imagePullPolicy: Always

      worker:
        # If a custom image must be used, uncomment 'dockerRegistry' and provide its value.
        #dockerRegistry: ""

        imageName: "wso2am-analytics-worker"
        imageTag: "3.1.0"
        replicas: 1
        # Minimum number of seconds for which a newly created pod should be ready without any of its containers crashing, for it to be considered available.
        minReadySeconds: 30
        strategy:
          rollingUpdate:
            maxSurge: 1
            maxUnavailable: 0
        # Indicates whether the container is running.
        livenessProbe:
          # Number of seconds after the container has started before liveness probes are initiated.
          initialDelaySeconds: 20
          # How often (in seconds) to perform the probe.
          periodSeconds: 10
        # Indicates whether the container is ready to service requests.
        readinessProbe:
          # Number of seconds after the container has started before readiness probes are initiated.
          initialDelaySeconds: 20
          # How often (in seconds) to perform the probe.
          periodSeconds: 10
        resources:
          # These are the minimum resource recommendations for running WSO2 Stream Processor based server profiles
          # as per official documentation (https://docs.wso2.com/display/SP440/Installation+Prerequisites).
          requests:
            memory: "4Gi"
            cpu: "2000m"
          # Please see the official documentation on WSO2 Stream Processor based Performance Analysis and Resource recommendations
          # (https://docs.wso2.com/display/SP440/Performance+Analysis+Results) and tune the limits according to your needs
          # where necessary.
          limits:
            memory: "4Gi"
            cpu: "2000m"
        imagePullPolicy: Always

kubernetes:
  # Name of Kubernetes service account
  serviceAccount: "wso2am-pattern-1-svc-account"
