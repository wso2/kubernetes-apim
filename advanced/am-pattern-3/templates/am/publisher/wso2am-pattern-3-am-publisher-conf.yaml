# Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "am-pattern-3.resource.prefix" . }}-am-publisher-conf
  namespace : {{ .Release.Namespace }}
  {{- if .Values.wso2.deployment.am.publisher.config }}
data:
  {{- range $index, $content := .Values.wso2.deployment.am.publisher.config }}
  {{ $index }}: |-
  {{ tpl $content $ | indent 4 }}
  {{- end }}

  {{- else }}
data:
  deployment.toml: |-
    [server]
    hostname = "{{ .Values.wso2.deployment.am.publisher.hostname }}"
    node_ip = "$env{NODE_IP}"
    server_role = "api-publisher"
    offset = "0"

    [user_store]
    type = "database_unique_id"

    [super_admin]
    username = "admin"
    password = "admin"
    create_admin_account = true

    [database.apim_db]
    type = "mysql"
    url = "jdbc:mysql://wso2am-mysql-db-service:3306/WSO2AM_DB?useSSL=false&amp;autoReconnect=true&amp;requireSSL=false&amp;verifyServerCertificate=false"
    username = "wso2carbon"
    password = "wso2carbon"
    driver = "com.mysql.cj.jdbc.Driver"

    [database.shared_db]
    type = "mysql"
    url = "jdbc:mysql://wso2am-mysql-db-service:3306/WSO2AM_SHARED_DB?useSSL=false&amp;autoReconnect=true&amp;requireSSL=false&amp;verifyServerCertificate=false"
    username = "wso2carbon"
    password = "wso2carbon"
    driver = "com.mysql.cj.jdbc.Driver"

    [keystore.tls]
    file_name =  "wso2carbon.jks"
    type =  "JKS"
    password =  "wso2carbon"
    alias =  "wso2carbon"
    key_password =  "wso2carbon"

    [truststore]
    file_name = "client-truststore.jks"
    type = "JKS"
    password = "wso2carbon"

    [[apim.gateway.environment]]
    name= "Production and Sandbox"
    type= "hybrid"
    display_in_api_console= true
    description= "This is a hybrid gateway that handles both production and sandbox token traffic."
    service_url= "https://{{ template "am-pattern-3.resource.prefix" . }}-am-gateway-service:${mgt.transport.https.port}${carbon.context}services/"
    username= "${admin.username}"
    password= "${admin.password}"
    ws_endpoint = "ws://{{ template "am-pattern-3.resource.prefix" . }}-am-gateway-service:9099"
    wss_endpoint = "wss://{{ template "am-pattern-3.resource.prefix" . }}-am-gateway-service:8099"
    http_endpoint = "http://{{ .Values.wso2.deployment.am.gateway.hostname }}"
    https_endpoint = "https://{{ .Values.wso2.deployment.am.gateway.hostname }}"

    [apim.analytics]
    enable = "true"
    store_api_url = "https://{{ template "am-pattern-3.resource.prefix" . }}-am-analytics-worker-service:7444"
    username= "$ref{super_admin.username}"
    password= "$ref{super_admin.password}"

    [[apim.analytics.url_group]]
    analytics_url =["tcp://{{ template "am-pattern-3.resource.prefix" . }}-am-analytics-worker-statefulset-0.{{ template "am-pattern-3.resource.prefix" . }}-am-analytics-worker-headless-service:7612","{{ template "am-pattern-3.resource.prefix" . }}-am-analytics-worker-statefulset-1.{{ template "am-pattern-3.resource.prefix" . }}-am-analytics-worker-headless-service:7612"]
    analytics_auth_url =["ssl://{{ template "am-pattern-3.resource.prefix" . }}-am-analytics-worker-statefulset-0.{{ template "am-pattern-3.resource.prefix" . }}-am-analytics-worker-headless-service:7712","ssl://{{ template "am-pattern-3.resource.prefix" . }}-am-analytics-worker-statefulset-1.{{ template "am-pattern-3.resource.prefix" . }}-am-analytics-worker-headless-service:7712"]
    type = "failover"

    # Traffic Manager configurations
    [apim.throttling]
    service_url = "https://{{ template "am-pattern-3.resource.prefix" . }}-am-tm-service:${mgt.transport.https.port}/services/"
    username= "$ref{super_admin.username}"
    password= "$ref{super_admin.password}"
    throttle_decision_endpoints = ["tcp://{{ template "am-pattern-3.resource.prefix" . }}-am-tm-statefulset-0.{{ template "am-pattern-3.resource.prefix" . }}-am-tm-headless-service:5672","tcp://{{ template "am-pattern-3.resource.prefix" . }}-am-tm-statefulset-1.{{ template "am-pattern-3.resource.prefix" . }}-am-tm-headless-service:5672"]

    [[apim.throttling.url_group]]
    traffic_manager_urls = ["tcp://{{ template "am-pattern-3.resource.prefix" . }}-am-tm-statefulset-0.{{ template "am-pattern-3.resource.prefix" . }}-am-tm-headless-service:9611"]
    traffic_manager_auth_urls = ["ssl://{{ template "am-pattern-3.resource.prefix" . }}-am-tm-statefulset-0.{{ template "am-pattern-3.resource.prefix" . }}-am-tm-headless-service:9711"]
    type = "loadbalance"

    [[apim.throttling.url_group]]
    traffic_manager_urls = ["tcp://{{ template "am-pattern-3.resource.prefix" . }}-am-tm-statefulset-1.{{ template "am-pattern-3.resource.prefix" . }}-am-tm-headless-service:9611"]
    traffic_manager_auth_urls = ["ssl://{{ template "am-pattern-3.resource.prefix" . }}-am-tm-statefulset-1.{{ template "am-pattern-3.resource.prefix" . }}-am-tm-headless-service:9711"]
    type = "loadbalance"

    [apim.cache.scopes]
    enable = true

    [apim.cache.publisher_roles] #check the usage and move to dev role
    enable = true

    [apim.devportal]
    url = "https://{{ .Values.wso2.deployment.am.devportal.hostname }}/devportal"

    [apim.workflow]
    enable = false
    service_url = "https://localhost:9445/bpmn"
    username = "$ref{super_admin.username}"
    password = "$ref{super_admin.password}"
    callback_endpoint = "https://localhost:9443/api/am/publisher/v0.16/workflows/update-workflow-status"
    token_endpoint = "https://localhost:8243/token"
    client_registration_endpoint = "https://localhost:9443/client-registration/v0.16/register"
    client_registration_username = "$ref{super_admin.username}"
    client_registration_password = "$ref{super_admin.password}"

    [transport.https.properties]
    proxyPort = 443

    [indexing]
    location = "/home/wso2carbon/solr/indexed-data"
    re_indexing = "$env{SOLR_INDEX_INSTANCE_ID}"
  {{- end }}

