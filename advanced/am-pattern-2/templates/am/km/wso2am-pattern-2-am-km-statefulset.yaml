# Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "am-pattern-2.resource.prefix" . }}-am-km-statefulset
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      deployment: {{ template "am-pattern-2.resource.prefix" . }}-km
  replicas: {{ .Values.wso2.deployment.am.km.replicas }}
  serviceName: {{ template "am-pattern-2.resource.prefix" . }}-km-service
  template:
    metadata:
      annotations:
        checksum.am.km.conf: {{ include (print $.Template.BasePath "/am/km/wso2am-pattern-2-am-km-conf.yaml") . | sha256sum }}
      labels:
        deployment: {{ template "am-pattern-2.resource.prefix" . }}-km
        product: apim
    spec:
      initContainers:
        - name: init-db
          image: busybox:1.32
          command: ['sh', '-c', 'echo -e "Checking for the availability of DB Server deployment"; while ! nc -z "{{ .Values.wso2.deployment.am.db.hostname }}" {{ .Values.wso2.deployment.am.db.port }}; do sleep 1; printf "-"; done; echo -e "  >> DB Server has started";']
        - name: init-db-connector-download
          image: busybox:1.32
          command:
            - /bin/sh
            - "-c"
            - |
              set -e
              connector_version=8.0.17
              wget "{{ .Values.wso2.deployment.am.db.driver_url }}" -P /db-connector-jar/
          volumeMounts:
            - name: db-connector-jar
              mountPath: /db-connector-jar
      containers:
        - name: wso2am-km
{{- include "image" (dict "Values" .Values "deployment" .Values.wso2.deployment.am) | indent 10 }}
          imagePullPolicy: {{ .Values.wso2.deployment.am.imagePullPolicy }}
          env:
          - name: PROFILE_NAME
            value: api-key-manager
          - name: NODE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: JVM_MEM_OPTS
            value: "-Xms{{ .Values.wso2.deployment.am.resources.jvm.heap.memory.xms }} -Xmx{{ .Values.wso2.deployment.am.resources.jvm.heap.memory.xmx }}"
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - nc -z localhost 9443
            initialDelaySeconds: {{ .Values.wso2.deployment.am.km.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.wso2.deployment.am.km.livenessProbe.periodSeconds }}
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - nc -z localhost 9443
            initialDelaySeconds: {{ .Values.wso2.deployment.am.km.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.wso2.deployment.am.km.readinessProbe.periodSeconds }}
          lifecycle:
            preStop:
              exec:
                command:  ['sh', '-c', '${WSO2_SERVER_HOME}/bin/wso2server.sh stop']
          resources:
            requests:
              memory: {{ .Values.wso2.deployment.am.resources.requests.memory }}
              cpu: {{ .Values.wso2.deployment.am.resources.requests.cpu }}
            limits:
              memory: {{ .Values.wso2.deployment.am.resources.limits.memory }}
              cpu: {{ .Values.wso2.deployment.am.resources.limits.cpu }}
          securityContext:
            runAsUser: 802
          ports:
            - containerPort: 9763
              protocol: TCP
            - containerPort: 9443
              protocol: TCP
          volumeMounts:
            - name: wso2am-km-conf
              mountPath: /home/wso2carbon/wso2-config-volume/repository/conf/deployment.toml
              subPath: deployment.toml
            - name: db-connector-jar
              mountPath: /home/wso2carbon/wso2-artifact-volume/repository/components/lib
      serviceAccountName: {{ .Values.kubernetes.serviceAccount }}
      {{- if .Values.wso2.deployment.am.imagePullSecrets }}
      imagePullSecrets:
        - name: {{ .Values.wso2.deployment.am.imagePullSecrets }}
      {{- else if and (not (eq .Values.wso2.subscription.username "")) (not (eq .Values.wso2.subscription.password "")) }}
      imagePullSecrets:
        - name: {{ template "am-pattern-2.resource.prefix" . }}-wso2-private-registry-creds
      {{ end }}
      volumes:
      - name: wso2am-km-conf
        configMap:
          name: {{ template "am-pattern-2.resource.prefix" . }}-am-km-conf
      - name: db-connector-jar
        emptyDir: {}
