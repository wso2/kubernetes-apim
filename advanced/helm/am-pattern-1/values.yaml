# Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

wso2:
  # WSO2 subscription parameters. If you do not have an active subscription, do not provide values for the parameters.
  # If you do not possess an active WSO2 subscription already, you can sign up for a WSO2 Free Trial Subscription at (https://wso2.com/free-trial-subscription).
  subscription:
    username: ""
    password: ""

  deployment:
    # Parameters for enabling/disabling WSO2 API Management deployment Helm Chart dependencies
    dependencies:
      # Enable/Disable the deployment of MySQL based WSO2 API Management Helm Chart
      mysql: true
      # Enable/Disable the deployment of NFS Server Provisioner (https://github.com/helm/charts/tree/master/stable/nfs-server-provisioner)
      nfsProvisioner: true

    # Parameters for configuring WSO2 API Management product data sources
    # By default, MySQL based WSO2 Helm Chart is used to deploy the product databases.
    # Thus, the default values are configured to use the product databases deployed, using this Chart.
    db:
      # Relational DBMS type
      type: mysql
      # Hostname of the relational DBMS service
      hostname: wso2am-mysql-db-service
      # Port of the relational DBMS service
      port: "3306"
      # Database username
      username: wso2carbon
      # Database password
      password: wso2carbon
      # JDBC driver class name
      driverClass: com.mysql.jdbc.Driver
      # SQL validation query
      validationQuery: "SELECT 1"
      # Databases for WSO2 API Manager Analytics. Please see the official documentation on Configuring WSO2 API Manager Analytics
      # (https://docs.wso2.com/display/AM260/Configuring+APIM+Analytics#ConfiguringAPIMAnalytics-Step4-Configurethedatabases) for configuring databases.
      analyticsDB: WSO2AM_ANALYTICS_DB
      permissionsDB: WSO2AM_ANALYTICS_PERMISSIONS_DB
      # Databases for WSO2 API Manager profiles. Please see the official documentation on Configuring WSO2 API Manager databases
      # (https://docs.wso2.com/display/AM260/Installing+and+Configuring+the+Databases) for configuring databases.
      apimgtDB: WSO2AM_APIMGT_DB
      regDB: WSO2AM_REG_DB
      userDB: WSO2AM_USER_DB

    # Parameters for configuring an external NFS server, for persisting/sharing common runtime artifacts of WSO2 API Manager (https://docs.wso2.com/display/AM260/Common+Runtime+and+Configuration+Artifacts)
    # [Optional] The parameters under this section are applicable only, if an external NFS server is used.
    # By default, the NFS Server Provisioner is to be used.
    persistentRuntimeArtifacts:
      # External NFS server IP
      nfsServerIP: ""
      # Exported location on external NFS server to be mounted at <APIM_HOME>/repository/deployment/server/synapse-configs
      sharedAPIMSynapseConfigsPath: ""
      # Exported location on external NFS server to be mounted at <APIM_HOME>/repository/deployment/server/executionplans
      sharedAPIMExecutionPlansPath: ""

    # Parameters for configuring the Kubernetes deployments of WSO2 API Manager and its product profiles
    wso2am:
      # If a custom image must be used, uncomment 'dockerRegistry' and provide its value.
      #      dockerRegistry: ""
      imageName: "wso2am"
      imageTag: "2.6.0"
      # Minimum number of seconds for which a newly created pod should be ready without any of its containers crashing, for it to be considered available.
      minReadySeconds: 30
      # Indicates whether the container is running.
      livenessProbe:
        # Number of seconds after the container has started before liveness probes are initiated.
        initialDelaySeconds: 240
        # How often (in seconds) to perform the probe.
        periodSeconds: 10
      # Indicates whether the container is ready to service requests.
      readinessProbe:
        # Number of seconds after the container has started before readiness probes are initiated.
        initialDelaySeconds: 240
        # How often (in seconds) to perform the probe.
        periodSeconds: 10
      resources:
        # These are the minimum resource recommendations for running WSO2 API Management product profiles
        # as per official documentation (https://docs.wso2.com/display/AM260/Installation+Prerequisites).
        requests:
          memory: "2Gi"
          cpu: "2000m"
        limits:
          memory: "3Gi"
          cpu: "3000m"
      # Refer to the Kubernetes documentation on updating images (https://kubernetes.io/docs/concepts/containers/images/#updating-images)
      imagePullPolicy: Always

    # Parameters for configuring the Kubernetes deployments of WSO2 API Manager Analytics Worker
    wso2amAnalyticsWorker:
      # If a custom image must be used, uncomment 'dockerRegistry' and provide its value.
      #      dockerRegistry: ""
      imageName: "wso2am-analytics-worker"
      imageTag: "2.6.0"
      # Number of deployment replicas
      replicas: 1
      # Minimum number of seconds for which a newly created pod should be ready without any of its containers crashing, for it to be considered available.
      minReadySeconds: 30
      strategy:
        rollingUpdate:
          # The maximum number of pods that can be scheduled above the desired number of pods.
          maxSurge: 1
          # The maximum number of pods that can be unavailable during the update.
          maxUnavailable: 0
      # Indicates whether the container is running.
      livenessProbe:
        # Number of seconds after the container has started before liveness probes are initiated.
        initialDelaySeconds: 20
        # How often (in seconds) to perform the probe.
        periodSeconds: 10
      # Indicates whether the container is ready to service requests.
      readinessProbe:
        # Number of seconds after the container has started before readiness probes are initiated.
        initialDelaySeconds: 20
        # How often (in seconds) to perform the probe.
        periodSeconds: 10
      resources:
        # These are the minimum resource recommendations for running WSO2 Stream Processor based server profiles
        # as per official documentation (https://docs.wso2.com/display/SP440/Installation+Prerequisites).
        requests:
          memory: "4Gi"
          cpu: "2000m"
        # Please see the official documentation on WSO2 Stream Processor based Performance Analysis and Resource recommendations
        # (https://docs.wso2.com/display/SP440/Performance+Analysis+Results) and tune the limits according to your needs
        # where necessary.
        limits:
          memory: "4Gi"
          cpu: "2000m"
      # Refer to the Kubernetes documentation on updating images (https://kubernetes.io/docs/concepts/containers/images/#updating-images)
      imagePullPolicy: Always

kubernetes:
  # Name of Kubernetes service account
  serviceAccount: "wso2am-pattern-1-svc-account"
