# Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "am-pattern-4.resource.prefix" . }}-am-trafficmanager-2-deployment
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      deployment: {{ template "am-pattern-4.resource.prefix" . }}-am-trafficmanager
      node: {{ template "am-pattern-4.resource.prefix" . }}-am-trafficmanager-2
  template:
    metadata:
      annotations:
        checksum.am.conf: {{ include (print $.Template.BasePath "/am/traffic-manager/instance-2/wso2am-pattern-4-am-trafficmanager-conf.yaml") . | sha256sum }}
      labels:
        deployment: {{ template "am-pattern-4.resource.prefix" . }}-am-trafficmanager
        node: {{ template "am-pattern-4.resource.prefix" . }}-am-trafficmanager-2
    spec:
      initContainers:
        - name: init-cp
          image: busybox:1.32
          command: ['sh', '-c', 'echo -e "Checking for the availability of Control Plane deployment"; while ! nc -z {{ template "am-pattern-4.resource.prefix" . }}-am-cp-service 9443; do sleep 1; printf "-"; done; echo -e "  >> Control Plane has started";']
      containers:
        - name: wso2am
{{- include "image" (dict "Values" .Values "deployment" .Values.wso2.deployment.am) | indent 10 }}
          imagePullPolicy: {{ .Values.wso2.deployment.am.imagePullPolicy }}
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - nc -z localhost 9443
            initialDelaySeconds: {{ .Values.wso2.deployment.am.trafficmanager.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.wso2.deployment.am.trafficmanager.livenessProbe.periodSeconds }}
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - nc -z localhost 9443
            initialDelaySeconds: {{ .Values.wso2.deployment.am.trafficmanager.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.wso2.deployment.am.trafficmanager.readinessProbe.periodSeconds }}
          lifecycle:
            preStop:
              exec:
                command:  ['sh', '-c', '${WSO2_SERVER_HOME}/bin/api-manager.sh stop']
          resources:
            requests:
              memory: {{ .Values.wso2.deployment.am.trafficmanager.resources.requests.memory }}
              cpu: {{ .Values.wso2.deployment.am.trafficmanager.resources.requests.cpu }}
            limits:
              memory: {{ .Values.wso2.deployment.am.trafficmanager.resources.limits.memory }}
              cpu: {{ .Values.wso2.deployment.am.trafficmanager.resources.limits.cpu }}
          securityContext:
            runAsUser: 802
          ports:
            - containerPort: 9763
              protocol: "TCP"
            - containerPort: 9443
              protocol: "TCP"
            - containerPort: 9711
              protocol: "TCP"
            - containerPort: 9611
              protocol: "TCP"
            - containerPort: 5672
              protocol: "TCP"
          env:
            - name: PROFILE_NAME
              value: traffic-manager
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: JVM_MEM_OPTS
              value: "-Xms{{ .Values.wso2.deployment.am.trafficmanager.resources.jvm.heap.memory.xms }} -Xmx{{ .Values.wso2.deployment.am.trafficmanager.resources.jvm.heap.memory.xmx }}"
          volumeMounts:
            - name: wso2am-conf
              mountPath: /home/wso2carbon/wso2-config-volume/repository/conf
      serviceAccountName: {{ .Values.kubernetes.serviceAccount }}
      {{- if .Values.wso2.deployment.am.imagePullSecrets }}
      imagePullSecrets:
        - name: {{ .Values.wso2.deployment.am.imagePullSecrets }}
      {{- else if and (not (eq .Values.wso2.subscription.username "")) (not (eq .Values.wso2.subscription.password "")) }}
      imagePullSecrets:
        - name: {{ template "am-pattern-4.resource.prefix" . }}-wso2-private-registry-creds
      {{ end }}
      volumes:
        - name: wso2am-conf
          configMap:
            name: {{ template "am-pattern-4.resource.prefix" . }}-am-trafficmanager-2-conf
        - name: wso2am-conf-entrypoint
          configMap:
            name: {{ template "am-pattern-4.resource.prefix" . }}-am-trafficmanager-conf-entrypoint
            defaultMode: 0407
        {{ if .Values.wso2.deployment.dependencies.mysql }}
        - name: mysql-connector-jar
          emptyDir: {}
        {{ end }}
